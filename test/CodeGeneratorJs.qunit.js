// CodeGeneratorJs.qunit.ts - QUnit tests for CPCBasic CodeGeneratorJs
//
define(["require", "exports", "../Utils", "../BasicLexer", "../BasicParser", "../CodeGeneratorJs", "../Variables", "./TestHelper"], function (require, exports, Utils_1, BasicLexer_1, BasicParser_1, CodeGeneratorJs_1, Variables_1, TestHelper_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    QUnit.module("CodeGeneratorJs: Tests", function () {
        var allTests = {
            numbers: {
                "a=1": ' v["a" + t.a] = o.vmAssign("a", 1);',
                "a=1.2": ' v["a" + t.a] = o.vmAssign("a", 1.2);',
                "a=-1.2": ' v["a" + t.a] = o.vmAssign("a", -1.2);',
                "a=+7.2": ' v["a" + t.a] = o.vmAssign("a", 7.2);',
                "a=&0": ' v["a" + t.a] = o.vmAssign("a", 0x0);',
                "a=&A7": ' v["a" + t.a] = o.vmAssign("a", 0xA7);',
                "a=-&A7": ' v["a" + t.a] = o.vmAssign("a", -(0xA7));',
                "a=&7FFF": ' v["a" + t.a] = o.vmAssign("a", 0x7FFF);',
                "a=&H7FFF": ' v["a" + t.a] = o.vmAssign("a", 0x7FFF);',
                "a=&8000": ' v["a" + t.a] = o.vmAssign("a", -0x8000);',
                "a=&FFFF": ' v["a" + t.a] = o.vmAssign("a", -0x1);',
                "a=&E123": ' v["a" + t.a] = o.vmAssign("a", -0x1edd);',
                "a=&HE123": ' v["a" + t.a] = o.vmAssign("a", -0x1edd);',
                "a=&X10100111": ' v["a" + t.a] = o.vmAssign("a", 0b10100111);',
                "a=-&X111111111111111": ' v["a" + t.a] = o.vmAssign("a", -0b111111111111111);',
                "a=255": ' v["a" + t.a] = o.vmAssign("a", 255);',
                "a=-255": ' v["a" + t.a] = o.vmAssign("a", -255);',
                "a=256": ' v["a" + t.a] = o.vmAssign("a", 256);',
                "a=-256": ' v["a" + t.a] = o.vmAssign("a", -256);',
                "a=32767": ' v["a" + t.a] = o.vmAssign("a", 32767);',
                "a=-32767": ' v["a" + t.a] = o.vmAssign("a", -32767);',
                "a=32768": ' v["a" + t.a] = o.vmAssign("a", 32768);',
                "a=-32768": ' v["a" + t.a] = o.vmAssign("a", -32768);',
                "a=1.2e+9": ' v["a" + t.a] = o.vmAssign("a", 1200000000);',
                "a ": "BasicParser: Expected = in  at pos 2: (end)",
                "1 a=": "BasicParser: Unexpected end of file in 1 at pos 4: ",
                "1 5=7": "BasicParser: Bad expression statement in 1 at pos 2-3: 5",
                "1 let 5=7": "BasicParser: Expected variable in 1 at pos 6-7: 5"
            },
            strings: {
                'a$="a12"': ' v.a$ = "a12";',
                'a$=+"7.1"': ' v.a$ = "7.1";',
                'a$="\\"': ' v.a$ = "\\\\";'
            },
            variables: {
                "a!=1.4": " v.aR = 1.4;",
                "a%=1.4": " v.aI = o.vmRound(1.4);",
                'a$="1.4"': ' v.a$ = "1.4";',
                "case=1": ' v["case" + t.c] = o.vmAssign("c", 1);',
                "CASE=1": ' v["case" + t.c] = o.vmAssign("c", 1);',
                "CaSe=cAsE": ' v["case" + t.c] = o.vmAssign("c", v["case" + t.c]);',
                "insert.line=2": ' v["insert_line" + t.i] = o.vmAssign("i", 2);',
                "in.ser.t.lin.e=2": ' v["in_ser_t_lin_e" + t.i] = o.vmAssign("i", 2);',
                "a!(2)=1.4": " v.aAR[2] = 1.4;",
                "a%(2)=1.4": " v.aAI[2] = o.vmRound(1.4);",
                'a$(2)="1.4"': ' v.aA$[2] = "1.4";',
                'a$[2]="1.4"': ' v.aA$[2] = "1.4";',
                "a(9)=b(1,2)": ' v["aA" + t.a][9] = o.vmAssign("a", v["bAA" + t.b][1][2]);',
                "a[9]=b[1,2]": ' v["aA" + t.a][9] = o.vmAssign("a", v["bAA" + t.b][1][2]);',
                "a(10,10,10)=b(10,9)": ' v["aAAA" + t.a][10][10][10] = o.vmAssign("a", v["bAA" + t.b][10][9]);',
                "a!(1.4)=b!(1.5,2.4,1)": " v.aAR[o.vmRound(1.4)] = v.bAAAR[o.vmRound(1.5)][o.vmRound(2.4)][1];",
                "a!(b+1)=b!(a,a%*2,a%+1.5)": ' v.aAR[o.vmRound(v["b" + t.b] + 1)] = v.bAAAR[o.vmRound(v["a" + t.a])][v.aI * 2][o.vmRound(v.aI + 1.5)];',
                "a!(b+1)=b!(int(a),a%*2,a%-1+&d)": ' v.aAR[o.vmRound(v["b" + t.b] + 1)] = v.bAAAR[o.int(v["a" + t.a])][v.aI * 2][(v.aI - 1) + 0xd];',
                "1 a$=a%": "CodeGeneratorJs: Type error in 1 at pos 4-5: =",
                "1 a$=a!": "CodeGeneratorJs: Type error in 1 at pos 4-5: ="
            },
            expressions: {
                "a=1+2+3": ' v["a" + t.a] = o.vmAssign("a", (1 + 2) + 3);',
                "a=3-2-1:": ' v["a" + t.a] = o.vmAssign("a", (3 - 2) - 1);',
                "a=&A7+&X10100111-(123-27)": ' v["a" + t.a] = o.vmAssign("a", (0xA7 + 0b10100111) - (123 - 27));',
                "a=(3+2)*(3-7)": ' v["a" + t.a] = o.vmAssign("a", (3 + 2) * (3 - 7));',
                "a=-(10-7)-(-6-2)": ' v["a" + t.a] = o.vmAssign("a", -(10 - 7) - (-6 - 2));',
                "a=20/2.5": ' v["a" + t.a] = o.vmAssign("a", 20 / 2.5);',
                "a=20\\3": ' v["a" + t.a] = o.vmAssign("a", (20 / 3) | 0);',
                "a=3^2:": ' v["a" + t.a] = o.vmAssign("a", Math.pow(3, 2));',
                "a=&X1001 AND &X1110": ' v["a" + t.a] = o.vmAssign("a", 0b1001 & 0b1110);',
                "a=&X1001 OR &X110": ' v["a" + t.a] = o.vmAssign("a", 0b1001 | 0b110);',
                "a=&X1001 XOR &X1010": ' v["a" + t.a] = o.vmAssign("a", 0b1001 ^ 0b1010);',
                "a=NOT &X1001": ' v["a" + t.a] = o.vmAssign("a", ~(0b1001));',
                "a=+++++++++---9": ' v["a" + t.a] = o.vmAssign("a", -9);',
                "a=(1=0)": ' v["a" + t.a] = o.vmAssign("a", 1 === 0 ? -1 : 0);',
                "a=(1>0)*(0<1)": ' v["a" + t.a] = o.vmAssign("a", (1 > 0 ? -1 : 0) * (0 < 1 ? -1 : 0));',
                "a=(b%>=c%)*(d<=e)": ' v["a" + t.a] = o.vmAssign("a", (v.bI >= v.cI ? -1 : 0) * (v["d" + t.d] <= v["e" + t.e] ? -1 : 0));',
                "a=1=1=-1": ' v["a" + t.a] = o.vmAssign("a", (1 === 1 ? -1 : 0) === -1 ? -1 : 0);',
                "a=1>=1>1": ' v["a" + t.a] = o.vmAssign("a", (1 >= 1 ? -1 : 0) > 1 ? -1 : 0);'
            },
            "Line numbers": {
                "0 cls": "CodeGeneratorJs: Line number overflow in 0 at pos 0-1: 0",
                "65535 cls": " o.cls(0);",
                "65536 cls": "CodeGeneratorJs: Line number overflow in 0 at pos 0-5: 65536",
                "1.2 cls": "CodeGeneratorJs: Expected integer line number in 0 at pos 0-3: 1.2",
                "2 cls\n1 cls": "CodeGeneratorJs: Expected increasing line number in 0 at pos 6-7: 1"
            },
            special: {
                "1 ": "",
                'a$="string with\nnewline"': ' v.a$ = "string with\\x0anewline";',
                "1 on error goto 0:a=asc(0)": "BasicParser: Expected string in 1 at pos 24-25: 0",
                "1 on error goto 2:a=asc(0)\n2 rem": ' o.onErrorGoto(2); v["a" + t.a] = o.vmAssign("a", o.asc(0));\n //',
                '1 on error goto 0:?chr$("A")': "BasicParser: Expected number in 1 at pos 25-26: A",
                '1 on error goto 2:?chr$("A")\n2 rem': ' o.onErrorGoto(2); o.print(0, o.chr$("A"), "\\r\\n");\n //',
                '1 on error goto 0:a$=dec$(b$,"\\    \\")\n2 rem': "BasicParser: Expected number in 1 at pos 26-28: b$",
                '1 on error goto 2:a$=dec$(b$,"\\    \\")\n2 rem': ' o.onErrorGoto(2); v.a$ = o.dec$(v.b$, "\\\\    \\\\");\n //'
            },
            "abs, after gosub, and, asc, atn, auto": {
                "a=abs(2.3)": ' v["a" + t.a] = o.vmAssign("a", o.abs(2.3));',
                "10 after 2 gosub 10": " o.afterGosub(2, undefined, 10);",
                "10 after 3,1 gosub 10": " o.afterGosub(3, 1, 10);",
                "1 after gosub 1": "BasicParser: Unexpected token in 1 at pos 8-13: gosub",
                "1 after 1,2,3 gosub 1": "BasicParser: Expected end of arguments in 1 at pos 11-12: ,",
                "a=b and c": ' v["a" + t.a] = o.vmAssign("a", o.vmRound(v["b" + t.b]) & o.vmRound(v["c" + t.c]));',
                "a!=asc(b$) and c%": " v.aR = o.asc(v.b$) & v.cI;",
                'a=asc("A")': ' v["a" + t.a] = o.vmAssign("a", o.asc("A"));',
                "a=atn(2.3)": ' v["a" + t.a] = o.vmAssign("a", o.atn(2.3));',
                "auto ": " o.auto();",
                "auto 100": " o.auto(100);"
            },
            "bin$, border": {
                "a$=bin$(3)": " v.a$ = o.bin$(3);",
                "a$=bin$(3,8)": " v.a$ = o.bin$(3, 8);",
                "a$=bin$(&x1001)": " v.a$ = o.bin$(0b1001);",
                "border 5": " o.border(5);",
                "border 5,a": ' o.border(5, v["a" + t.a]);'
            },
            "call, cat, chain, chain merge, chr$, cint, clg, closein, closeout, cls, cont, copychr$, cos, creal, cursor": {
                "call&a7bc": ' o.call(-0x5844); o.goto("s0"); break;\ncase "s0":',
                "call 4711,1,2,3,4": ' o.call(4711, 1, 2, 3, 4); o.goto("s0"); break;\ncase "s0":',
                "cat ": " o.cat();",
                'chain"f1"': ' o.chain("f1"); o.goto("s0"); break;\ncase "s0":',
                'chain"f2" , 10': ' o.chain("f2", 10); o.goto("s0"); break;\ncase "s0":',
                'chain"f3" , 10+3': ' o.chain("f3", 10 + 3); o.goto("s0"); break;\ncase "s0":',
                'chain merge "f1"': ' o.chainMerge("f1"); o.goto("s0"); break;\ncase "s0":',
                'chain merge "f2" , 10': ' o.chainMerge("f2", 10); o.goto("s0"); break;\ncase "s0":',
                'chain merge "f3" , 10+3': ' o.chainMerge("f3", 10 + 3); o.goto("s0"); break;\ncase "s0":',
                'chain merge "f4" , 10+3, delete 100-200': ' o.chainMerge("f4", 10 + 3, 100, 200); o.goto("s0"); break;\ncase "s0":',
                'chain merge "f5" , , delete 100-200': ' o.chainMerge("f5", undefined, 100, 200); o.goto("s0"); break;\ncase "s0":',
                "a=chr$(65)": ' v["a" + t.a] = o.vmAssign("a", o.chr$(65));',
                "a=cint(2.3)": ' v["a" + t.a] = o.vmAssign("a", o.cint(2.3));',
                "clear ": ' o.clear(); o.goto("s0"); break;\ncase "s0":',
                "clear input": " o.clearInput();",
                "clg ": " o.clg();",
                "clg 15-1": " o.clg(15 - 1);",
                "closein ": " o.closein();",
                "closeout ": ' o.closeout(); o.goto("s0"); break;\ncase "s0":',
                "cls ": " o.cls(0);",
                "cls #5": " o.cls(5);",
                "cls #a+7-2*b": ' o.cls((v["a" + t.a] + 7) - (2 * v["b" + t.b]));',
                "cont ": " o.cont(); break;",
                "a$=copychr$(#0)": " v.a$ = o.copychr$(0);",
                "a$=copychr$(#a+1)": ' v.a$ = o.copychr$(v["a" + t.a] + 1);',
                "a=cos(2.3)": ' v["a" + t.a] = o.vmAssign("a", o.cos(2.3));',
                "a=creal(2.3+a)": ' v["a" + t.a] = o.vmAssign("a", o.creal(2.3 + v["a" + t.a]));',
                "cursor ": " o.cursor(0);",
                "cursor 0": " o.cursor(0, 0);",
                "cursor 1": " o.cursor(0, 1);",
                "cursor 1,1": " o.cursor(0, 1, 1);",
                "cursor ,1": " o.cursor(0, undefined, 1);",
                "cursor #2": " o.cursor(2);",
                "cursor #2,1": " o.cursor(2, 1);",
                "cursor #2,1,1": " o.cursor(2, 1, 1);",
                "cursor #2,,1": " o.cursor(2, undefined, 1);"
            },
            "data, dec$, def fn, defint, defreal, defstr, deg, delete, derr, di, dim, draw, drawr": {
                "data ": 'o.data(, "");\n /* data */;',
                "data ,": "o.data(, undefined, undefined);\n /* data */;",
                "data \\": 'o.data(, "\\\\");\n /* data */;',
                "data 1,2,3": 'o.data(, "1", "2", "3");\n /* data */;',
                'data "item1"," item2","item3 "': 'o.data(, "item1", " item2", "item3 ");\n /* data */;',
                "data item1,item2,item3": 'o.data(, "item1", "item2", "item3");\n /* data */;',
                "data &a3,4,abc,": 'o.data(, "&a3", "4", "abc", undefined);\n /* data */;',
                'data " ",!"#$%&\'()*+,","': 'o.data(, " ", "!\\"#$%&\'()*+", ",");\n /* data */;',
                'data "string in data with\nnewline"': 'o.data(, "string in data with\\x0anewline");\n /* data */;',
                'a$=dec$(3,"##.##")': ' v.a$ = o.dec$(3, "##.##");',
                "def fnclk=10": ' v["fnclk" + t.f] = function () { return o.vmAssign("f", 10); };',
                "def fnclk(a)=a*10": ' v["fnclk" + t.f] = function (a) { return o.vmAssign("f", a * 10); };',
                "def fnclk(a,b)=a*10+b": ' v["fnclk" + t.f] = function (a, b) { return o.vmAssign("f", (a * 10) + b); };',
                "def fnclk$(a$,b$)=a$+b$": " v.fnclk$ = function (a$, b$) { return a$ + b$; };",
                "def fn clk=10": ' v["fnclk" + t.f] = function () { return o.vmAssign("f", 10); };',
                "def fn clk(a)=a*10": ' v["fnclk" + t.f] = function (a) { return o.vmAssign("f", a * 10); };',
                "def fn clk(a,b)=a*10+b": ' v["fnclk" + t.f] = function (a, b) { return o.vmAssign("f", (a * 10) + b); };',
                "def fn clk$(a$,b$)=a$+b$": " v.fnclk$ = function (a$, b$) { return a$ + b$; };",
                "defint a": ' o.defint("a");',
                "defint a-t": ' o.defint("a", "t");',
                "defint a,b,c": ' o.defint("a"); o.defint("b"); o.defint("c");',
                "defint a,b-c,v,x-y": ' o.defint("a"); o.defint("b", "c"); o.defint("v"); o.defint("x", "y");',
                "1 defint z-a": "CodeGeneratorJs: Decreasing range in 1 at pos 10-11: -",
                "defreal a": ' o.defreal("a");',
                "defreal a-t": ' o.defreal("a", "t");',
                "defreal a,b,c": ' o.defreal("a"); o.defreal("b"); o.defreal("c");',
                "defreal a,b-c,v,x-y": ' o.defreal("a"); o.defreal("b", "c"); o.defreal("v"); o.defreal("x", "y");',
                "1 defreal z-a": "CodeGeneratorJs: Decreasing range in 1 at pos 11-12: -",
                "defstr a": ' o.defstr("a");',
                "defstr a-t": ' o.defstr("a", "t");',
                "defstr a,b,c": ' o.defstr("a"); o.defstr("b"); o.defstr("c");',
                "defstr a,b-c,v,x-y": ' o.defstr("a"); o.defstr("b", "c"); o.defstr("v"); o.defstr("x", "y");',
                "1 defstr z-a": "CodeGeneratorJs: Decreasing range in 1 at pos 10-11: -",
                'defstr f:f(x)="w"': ' o.defstr("f"); v["fA" + t.f][o.vmRound(v["x" + t.x])] = o.vmAssign("f", "w");',
                "deg ": " o.deg();",
                "delete": " o.delete(1, 65535); break;",
                "delete -": " o.delete(undefined, 65535); break;",
                "delete 10": " o.delete(10); break;",
                "delete 1-": " o.delete(1, 65535); break;",
                "delete -1": " o.delete(undefined, 1); break;",
                "delete 1-2": " o.delete(1, 2); break;",
                "1 delete 2-1": "CodeGeneratorJs: Decreasing line range in 1 at pos 10-11: -",
                "1 delete 1+2": "BasicParser: Expected : in 1 at pos 10-11: +",
                "1 delete a": "BasicParser: Undefined range in 1 at pos 9-10: a",
                "a=derr": ' v["a" + t.a] = o.vmAssign("a", o.derr());',
                "di ": " o.di();",
                "dim a(1)": ' /* v["aA" + t.a][1] = */ o.dim("aA" + t.a, 1);',
                "dim a!(1)": ' /* v.aAR[1] = */ o.dim("aAR", 1);',
                "dim a%(1)": ' /* v.aAI[1] = */ o.dim("aAI", 1);',
                "dim a$(1)": ' /* v.aA$[1] = */ o.dim("aA$", 1);',
                "dim a(2,13)": ' /* v["aAA" + t.a][2][13] = */ o.dim("aAA" + t.a, 2, 13);',
                "dim a(2,13+7),b$[3],c![2*a,7]": ' /* v["aAA" + t.a][2][13 + 7] = */ o.dim("aAA" + t.a, 2, 13 + 7); /* v.bA$[3] = */ o.dim("bA$", 3); /* v.cAAR[o.vmRound(2 * v["a" + t.a])][7] = */ o.dim("cAAR", 2 * v["a" + t.a], 7);',
                "dim a[2,13)": ' /* v["aAA" + t.a][2][13] = */ o.dim("aAA" + t.a, 2, 13);',
                "draw 10,20": " o.draw(10, 20);",
                "draw -10,-20,7": " o.draw(-10, -20, 7);",
                "draw 10,20,7,3": " o.draw(10, 20, 7, 3);",
                "draw 10,20,,3": " o.draw(10, 20, undefined, 3);",
                "draw x,y,m,g1": ' o.draw(v["x" + t.x], v["y" + t.y], v["m" + t.m], v["g1" + t.g]);',
                "drawr 10,20": " o.drawr(10, 20);",
                "drawr -10,-20,7": " o.drawr(-10, -20, 7);",
                "drawr 10,20,7,3": " o.drawr(10, 20, 7, 3);",
                "drawr 10,20,,3": " o.drawr(10, 20, undefined, 3);",
                "drawr x,y,m,g1": ' o.drawr(v["x" + t.x], v["y" + t.y], v["m" + t.m], v["g1" + t.g]);'
            },
            "edit, ei, else, end, ent, env, eof, erase, erl, err, error, every gosub, exp": {
                "edit 20": " o.edit(20); break;",
                "ei ": " o.ei();",
                "else": " // else",
                "else 10": " // else 10",
                "else a=7": " // else a = 7",
                "end ": ' o.end("s0"); break;\ncase "s0":',
                "ent 1": " o.ent(1);",
                "ent 1,2,a,4": ' o.ent(1, 2, v["a" + t.a], 4);',
                "ent num,steps,dist,ti,steps2,dist2,ti2": ' o.ent(v["num" + t.n], v["steps" + t.s], v["dist" + t.d], v["ti" + t.t], v["steps2" + t.s], v["dist2" + t.d], v["ti2" + t.t]);',
                "ent num,=period,ti,=period2,ti2": ' o.ent(v["num" + t.n], undefined, v["period" + t.p], v["ti" + t.t], undefined, v["period2" + t.p], v["ti2" + t.t]);',
                "env 1": " o.env(1);",
                "env 1,2,a,4": ' o.env(1, 2, v["a" + t.a], 4);',
                "env num,steps,dist,ti,steps2,dist2,ti2": ' o.env(v["num" + t.n], v["steps" + t.s], v["dist" + t.d], v["ti" + t.t], v["steps2" + t.s], v["dist2" + t.d], v["ti2" + t.t]);',
                "env num,=reg,period,=reg2,period2": ' o.env(v["num" + t.n], undefined, v["reg" + t.r], v["period" + t.p], undefined, v["reg2" + t.r], v["period2" + t.p]);',
                "a=eof": ' v["a" + t.a] = o.vmAssign("a", o.eof());',
                "erase a": ' o.erase("a");',
                "erase b$": ' o.erase("b$");',
                "erase a,b$,c!,d%": ' o.erase("a", "b$", "cR", "dI");',
                "1 erase 5": "BasicParser: Expected variable in 1 at pos 8-9: 5",
                "a=erl": ' v["a" + t.a] = o.vmAssign("a", o.erl());',
                "a=err": ' v["a" + t.a] = o.vmAssign("a", o.err());',
                "error 7": " o.error(7); break;",
                "error 5+a": ' o.error(5 + v["a" + t.a]); break;',
                "10 every 50 gosub 10": " o.everyGosub(50, undefined, 10);",
                "10 every 25.2,1 gosub 10": " o.everyGosub(25.2, 1, 10);",
                "10 every 10+a,b gosub 10": ' o.everyGosub(10 + v["a" + t.a], v["b" + t.b], 10);',
                "a=exp(2.3)": ' v["a" + t.a] = o.vmAssign("a", o.exp(2.3));'
            },
            "fill, fix, fn, for, frame, fre": {
                "fill 7": " o.fill(7);",
                "a=fix(2.3)": ' v["a" + t.a] = o.vmAssign("a", o.fix(2.3));',
                "x=fnclk": ' v["x" + t.x] = o.vmAssign("x", v["fnclk" + t.f]());',
                "x=fnclk(a)": ' v["x" + t.x] = o.vmAssign("x", v["fnclk" + t.f](v["a" + t.a]));',
                "x=fnclk(a,b)": ' v["x" + t.x] = o.vmAssign("x", v["fnclk" + t.f](v["a" + t.a], v["b" + t.b]));',
                "x$=fnclk$(a$,b$)": " v.x$ = v.fnclk$(v.a$, v.b$);",
                "x=fn clk": ' v["x" + t.x] = o.vmAssign("x", v["fnclk" + t.f]());',
                "x=fn clk(a)": ' v["x" + t.x] = o.vmAssign("x", v["fnclk" + t.f](v["a" + t.a]));',
                "x=fn clk(a,b)": ' v["x" + t.x] = o.vmAssign("x", v["fnclk" + t.f](v["a" + t.a], v["b" + t.b]));',
                "x$=fn clk$(a$,b$)": " v.x$ = v.fnclk$(v.a$, v.b$);",
                "for a=1 to 10": ' /* for() */ o.vmAssertNumberType("a"); v["a" + t.a] = 1; o.goto("f0b"); break;\ncase "f0": v["a" + t.a] += 1;\ncase "f0b": if (v["a" + t.a] > 10) { o.goto("f0e"); break; }',
                "for a%=1.5 to 9.5": ' /* for() */ v.aI = o.vmAssign("aI", 1.5); v.aIEnd = o.vmAssign("aI", 9.5); o.goto("f0b"); break;\ncase "f0": v.aI += 1;\ncase "f0b": if (v.aI > v.aIEnd) { o.goto("f0e"); break; }',
                "for a!=1.5 to 9.5": ' /* for() */ o.vmAssertNumberType("aR"); v.aR = o.vmAssign("aR", 1.5); v.aREnd = o.vmAssign("aR", 9.5); o.goto("f0b"); break;\ncase "f0": v.aR += 1;\ncase "f0b": if (v.aR > v.aREnd) { o.goto("f0e"); break; }',
                "for a=1 to 10 step 3": ' /* for() */ o.vmAssertNumberType("a"); v["a" + t.a] = 1; o.goto("f0b"); break;\ncase "f0": v["a" + t.a] += 3;\ncase "f0b": if (v["a" + t.a] > 10) { o.goto("f0e"); break; }',
                "for a=5+b to -4 step -2.3": ' /* for() */ o.vmAssertNumberType("a"); v["a" + t.a] = o.vmAssign("a", 5 + v["b" + t.b]); v.aStep = o.vmAssign("a", -2.3); o.goto("f0b"); break;\ncase "f0": v["a" + t.a] += v.aStep;\ncase "f0b": if (v.aStep > 0 && v["a" + t.a] > -4 || v.aStep < 0 && v["a" + t.a] < -4) { o.goto("f0e"); break; }',
                "for a=b to c step d": ' /* for() */ o.vmAssertNumberType("a"); v["a" + t.a] = o.vmAssign("a", v["b" + t.b]); v.aEnd = o.vmAssign("a", v["c" + t.c]); v.aStep = o.vmAssign("a", v["d" + t.d]); o.goto("f0b"); break;\ncase "f0": v["a" + t.a] += v.aStep;\ncase "f0b": if (v.aStep > 0 && v["a" + t.a] > v.aEnd || v.aStep < 0 && v["a" + t.a] < v.aEnd) { o.goto("f0e"); break; }',
                "for a=b% to c%": ' /* for() */ o.vmAssertNumberType("a"); v["a" + t.a] = v.bI; v.aEnd = v.cI; o.goto("f0b"); break;\ncase "f0": v["a" + t.a] += 1;\ncase "f0b": if (v["a" + t.a] > v.aEnd) { o.goto("f0e"); break; }',
                "frame ": ' o.frame(); o.goto("s0"); break;\ncase "s0":',
                "a=fre(0)": ' v["a" + t.a] = o.vmAssign("a", o.fre(0));',
                'a=fre("")': ' v["a" + t.a] = o.vmAssign("a", o.fre(""));',
                "a=fre(b-2)": ' v["a" + t.a] = o.vmAssign("a", o.fre(v["b" + t.b] - 2));',
                "a=fre(a$)": ' v["a" + t.a] = o.vmAssign("a", o.fre(v.a$));'
            },
            "gosub, goto, graphics paper, graphics pen": {
                "10 gosub 10": ' o.gosub("10g0", 10); break;\ncase "10g0":',
                "1 gosub a": "BasicParser: Expected line number in 1 at pos 8-9: a",
                "10 goto 10": " o.goto(10); break;",
                "1 goto a": "BasicParser: Expected line number in 1 at pos 7-8: a",
                "graphics paper 5": " o.graphicsPaper(5);",
                "graphics paper 2.3*a": ' o.graphicsPaper(2.3 * v["a" + t.a]);',
                "graphics pen 5": " o.graphicsPen(5);",
                "graphics pen 5,1": " o.graphicsPen(5, 1);",
                "graphics pen ,0": " o.graphicsPen(undefined, 0);",
                "graphics pen 2.3*a,1+b": ' o.graphicsPen(2.3 * v["a" + t.a], 1 + v["b" + t.b]);'
            },
            "hex$, himem": {
                "a$=hex$(16)": " v.a$ = o.hex$(16);",
                "a$=hex$(16,4)": " v.a$ = o.hex$(16, 4);",
                "a$=hex$(a,b)": ' v.a$ = o.hex$(v["a" + t.a], v["b" + t.b]);',
                "a=himem": ' v["a" + t.a] = o.vmAssign("a", o.himem());'
            },
            "if, ink, inkey, inkey$, inp, input, instr, int": {
                "10 if a=1 then goto 10": ' if (v["a" + t.a] === 1) { o.goto(10); break; }',
                "10 if a=1 then 10": ' if (v["a" + t.a] === 1) { o.goto(10); break; }',
                "10 if a=1 goto 10": ' if (v["a" + t.a] === 1) { o.goto(10); break; }',
                "10 if a=1 then a=a+1:goto 10": ' if (v["a" + t.a] === 1) { v["a" + t.a] = o.vmAssign("a", v["a" + t.a] + 1); o.goto(10); break; }',
                "10 if a=1 then gosub 10": ' if (v["a" + t.a] === 1) { o.goto("10i0"); break; } o.goto("10i0e"); break;\ncase "10i0": o.gosub("10g0", 10); break;\ncase "10g0":;\ncase "10i0e": ;',
                "10 if a=1 then 10:a=never1": ' if (v["a" + t.a] === 1) { o.goto("10i0"); break; } o.goto("10i0e"); break;\ncase "10i0": o.goto(10); break; v["a" + t.a] = o.vmAssign("a", v["never1" + t.n]);\ncase "10i0e": ;',
                "10 if a=1 then 10 else 20\n20 rem": ' if (v["a" + t.a] === 1) { o.goto(10); break; } else { o.goto(20); break; }\n //',
                "10 if a=1 then 10 else goto 20\n20 rem": ' if (v["a" + t.a] === 1) { o.goto(10); break; } else { o.goto(20); break; }\n //',
                "10 if a=b+5*c then a=a+1: goto 10 else a=a-1:goto 20\n20 rem": ' if (v["a" + t.a] === (v["b" + t.b] + (5 * v["c" + t.c]))) { v["a" + t.a] = o.vmAssign("a", v["a" + t.a] + 1); o.goto(10); break; } else { v["a" + t.a] = o.vmAssign("a", v["a" + t.a] - 1); o.goto(20); break; }\n //',
                "10 if a%<>3 then 10": " if (v.aI !== 3) { o.goto(10); break; }",
                '10 if a$<>"3" then 10': ' if (v.a$ !== "3") { o.goto(10); break; }',
                "ink 2,19": " o.ink(2, 19);",
                "ink 2,19,22": " o.ink(2, 19, 22);",
                "ink a*2,b-1,c": ' o.ink(v["a" + t.a] * 2, v["b" + t.b] - 1, v["c" + t.c]);',
                "a=inkey(0)": ' v["a" + t.a] = o.vmAssign("a", o.inkey(0));',
                "a$=inkey$": " v.a$ = o.inkey$();",
                "a=inp(&ff77)": ' v["a" + t.a] = o.vmAssign("a", o.inp(-0x89));',
                "input a$": ' o.goto("s0"); break;\ncase "s0":o.input(0, undefined, "? ", "a$"); o.goto("s1"); break;\ncase "s1":; v.a$ = o.vmGetNextInput();',
                "input a$,b": ' o.goto("s0"); break;\ncase "s0":o.input(0, undefined, "? ", "a$", "b"); o.goto("s1"); break;\ncase "s1":; v.a$ = o.vmGetNextInput(); v["b" + t.b] = o.vmGetNextInput();',
                "input ;a$,b": ' o.goto("s0"); break;\ncase "s0":o.input(0, ";", "? ", "a$", "b"); o.goto("s1"); break;\ncase "s1":; v.a$ = o.vmGetNextInput(); v["b" + t.b] = o.vmGetNextInput();',
                'input "para",a$,b': ' o.goto("s0"); break;\ncase "s0":o.input(0, undefined, "para", "a$", "b"); o.goto("s1"); break;\ncase "s1":; v.a$ = o.vmGetNextInput(); v["b" + t.b] = o.vmGetNextInput();',
                'input "para";a$,b': ' o.goto("s0"); break;\ncase "s0":o.input(0, undefined, "para? ", "a$", "b"); o.goto("s1"); break;\ncase "s1":; v.a$ = o.vmGetNextInput(); v["b" + t.b] = o.vmGetNextInput();',
                'input ;"para noCRLF";a$,b': ' o.goto("s0"); break;\ncase "s0":o.input(0, ";", "para noCRLF? ", "a$", "b"); o.goto("s1"); break;\ncase "s1":; v.a$ = o.vmGetNextInput(); v["b" + t.b] = o.vmGetNextInput();',
                'input#2,;"para noCRLF";a$,b': ' o.goto("s0"); break;\ncase "s0":o.input(2, ";", "para noCRLF? ", "a$", "b"); o.goto("s1"); break;\ncase "s1":; v.a$ = o.vmGetNextInput(); v["b" + t.b] = o.vmGetNextInput();',
                'input#stream,;"string";a$,b': ' o.goto("s0"); break;\ncase "s0":o.input(v["stream" + t.s], ";", "string? ", "a$", "b"); o.goto("s1"); break;\ncase "s1":; v.a$ = o.vmGetNextInput(); v["b" + t.b] = o.vmGetNextInput();',
                'a=instr("key","ey")': ' v["a" + t.a] = o.vmAssign("a", o.instr("key", "ey"));',
                "a=instr(s$,find$)": ' v["a" + t.a] = o.vmAssign("a", o.instr(v.s$, v.find$));',
                "a=instr(start,s$,find$)": ' v["a" + t.a] = o.vmAssign("a", o.instr(v["start" + t.s], v.s$, v.find$));',
                "a=int(-2.3)": ' v["a" + t.a] = o.vmAssign("a", o.int(-2.3));',
                "a=int(b+2.3)": ' v["a" + t.a] = o.vmAssign("a", o.int(v["b" + t.b] + 2.3));'
            },
            joy: {
                "a=joy(0)": ' v["a" + t.a] = o.vmAssign("a", o.joy(0));',
                "a=joy(b+1)": ' v["a" + t.a] = o.vmAssign("a", o.joy(v["b" + t.b] + 1));'
            },
            "key, key def": {
                'key 11,"border 13:paper 0"': ' o.key(11, "border 13:paper 0");',
                "key a,b$": ' o.key(v["a" + t.a], v.b$);',
                "key def 68,1": " o.keyDef(68, 1);",
                "key def 68,1,159": " o.keyDef(68, 1, 159);",
                "key def 68,1,159,160": " o.keyDef(68, 1, 159, 160);",
                "key def 68,1,159,160,161": " o.keyDef(68, 1, 159, 160, 161);",
                "key def num,fire,normal,shift,ctrl": ' o.keyDef(v["num" + t.n], v["fire" + t.f], v["normal" + t.n], v["shift" + t.s], v["ctrl" + t.c]);'
            },
            "left$, len, let, line input, list, load, locate, log, log10, lower$": {
                "a$=left$(b$,n)": ' v.a$ = o.left$(v.b$, v["n" + t.n]);',
                "a=len(a$)": ' v["a" + t.a] = o.vmAssign("a", o.len(v.a$));',
                "let a=a+1": ' v["a" + t.a] = o.vmAssign("a", v["a" + t.a] + 1);',
                "line input a$": ' o.goto("s0"); break;\ncase "s0":o.lineInput(0, undefined, "? ", "a$"); o.goto("s1"); break;\ncase "s1":; v.a$ = o.vmGetNextInput();',
                "line input ;a$": ' o.goto("s0"); break;\ncase "s0":o.lineInput(0, ";", "? ", "a$"); o.goto("s1"); break;\ncase "s1":; v.a$ = o.vmGetNextInput();',
                'line input "para",a$': ' o.goto("s0"); break;\ncase "s0":o.lineInput(0, undefined, "para", "a$"); o.goto("s1"); break;\ncase "s1":; v.a$ = o.vmGetNextInput();',
                'line input "para";a$': ' o.goto("s0"); break;\ncase "s0":o.lineInput(0, undefined, "para? ", "a$"); o.goto("s1"); break;\ncase "s1":; v.a$ = o.vmGetNextInput();',
                'line input ;"para noCRLF";a$': ' o.goto("s0"); break;\ncase "s0":o.lineInput(0, ";", "para noCRLF? ", "a$"); o.goto("s1"); break;\ncase "s1":; v.a$ = o.vmGetNextInput();',
                'line input#2,;"para noCRLF";a$': ' o.goto("s0"); break;\ncase "s0":o.lineInput(2, ";", "para noCRLF? ", "a$"); o.goto("s1"); break;\ncase "s1":; v.a$ = o.vmGetNextInput();',
                'line input#stream,;"string";a$': ' o.goto("s0"); break;\ncase "s0":o.lineInput(v["stream" + t.s], ";", "string? ", "a$"); o.goto("s1"); break;\ncase "s1":; v.a$ = o.vmGetNextInput();',
                "list ": " o.list(0); break;",
                "list -": " o.list(0, undefined, 65535); break;",
                "list 10": " o.list(0, 10); break;",
                "list 1-": " o.list(0, 1, 65535); break;",
                "list -1": " o.list(0, undefined, 1); break;",
                "list 1-2": " o.list(0, 1, 2); break;",
                "list #3": " o.list(3, undefined); break;",
                "list ,#3": " o.list(3, undefined); break;",
                "list 10,#3": " o.list(3, 10); break;",
                "list 1-,#3": " o.list(3, 1, 65535); break;",
                "list -1,#3": " o.list(3, undefined, 1); break;",
                "list 1-2,#3": " o.list(3, 1, 2); break;",
                'load "file"': ' o.load("file"); o.goto("s0"); break;\ncase "s0":',
                'load "file.scr",&c000': ' o.load("file.scr", -0x4000); o.goto("s0"); break;\ncase "s0":',
                "load f$,adr": ' o.load(v.f$, v["adr" + t.a]); o.goto("s0"); break;\ncase "s0":',
                "locate 10,20": " o.locate(0, 10, 20);",
                "locate#2,10,20": " o.locate(2, 10, 20);",
                "locate#stream,x,y": ' o.locate(v["stream" + t.s], v["x" + t.x], v["y" + t.y]);',
                "a=log(10)": ' v["a" + t.a] = o.vmAssign("a", o.log(10));',
                "a=log10(10)": ' v["a" + t.a] = o.vmAssign("a", o.log10(10));',
                "a$=lower$(b$)": " v.a$ = o.lower$(v.b$);",
                'a$=lower$("String")': ' v.a$ = o.lower$("String");'
            },
            "mask, max, memory, merge, mid$, min, mod, mode, move, mover": {
                "mask &x10101011": " o.mask(0b10101011);",
                "mask 2^(8-x),1": ' o.mask(Math.pow(2, (8 - v["x" + t.x])), 1);',
                "mask a,b": ' o.mask(v["a" + t.a], v["b" + t.b]);',
                "mask ,b": ' o.mask(undefined, v["b" + t.b]);',
                "a=max(1)": ' v["a" + t.a] = o.vmAssign("a", o.max(1));',
                "a=max(1,5)": ' v["a" + t.a] = o.vmAssign("a", o.max(1, 5));',
                "a=max(b,c,d)": ' v["a" + t.a] = o.vmAssign("a", o.max(v["b" + t.b], v["c" + t.c], v["d" + t.d]));',
                'a$=max("abc")': ' v.a$ = o.vmAssign("a$", o.max("abc"));',
                '1 a$=max("abc","d")': "CodeGeneratorJs: Type error in 1 at pos 4-5: =",
                "memory &3fff": " o.memory(0x3fff);",
                "memory adr": ' o.memory(v["adr" + t.a]);',
                'merge "file"': ' o.merge("file"); o.goto("s0"); break;\ncase "s0":',
                "merge f$": ' o.merge(v.f$); o.goto("s0"); break;\ncase "s0":',
                'a$=mid$("string",3)': ' v.a$ = o.mid$("string", 3);',
                'a$=mid$("string",3,2)': ' v.a$ = o.mid$("string", 3, 2);',
                "a$=mid$(b$,p)": ' v.a$ = o.mid$(v.b$, v["p" + t.p]);',
                "a$=mid$(b$,p,lg)": ' v.a$ = o.mid$(v.b$, v["p" + t.p], v["lg" + t.l]);',
                "mid$(a$,2)=b$": ' v.a$ = o.vmAssign("a$", o.mid$Assign(v.a$, 2, undefined, v.b$));',
                "mid$(a$,2,2)=b$": ' v.a$ = o.vmAssign("a$", o.mid$Assign(v.a$, 2, 2, v.b$));',
                'mid$(a$,b%,c!)="string"': ' v.a$ = o.vmAssign("a$", o.mid$Assign(v.a$, v.bI, v.cR, "string"));',
                "a=min(1)": ' v["a" + t.a] = o.vmAssign("a", o.min(1));',
                "a=min(1,5)": ' v["a" + t.a] = o.vmAssign("a", o.min(1, 5));',
                "a=min(b,c,d)": ' v["a" + t.a] = o.vmAssign("a", o.min(v["b" + t.b], v["c" + t.c], v["d" + t.d]));',
                'a$=min("abc")': ' v.a$ = o.vmAssign("a$", o.min("abc"));',
                '1 a$=min("abc","d")': "CodeGeneratorJs: Type error in 1 at pos 4-5: =",
                "a=10 mod 3": ' v["a" + t.a] = o.vmAssign("a", 10 % 3);',
                "a=b mod -c": ' v["a" + t.a] = o.vmAssign("a", o.vmRound(v["b" + t.b]) % o.vmRound(-(v["c" + t.c])));',
                "mode 0": " o.mode(0);",
                "mode n+1": ' o.mode(v["n" + t.n] + 1);',
                "move 10,20": " o.move(10, 20);",
                "move -10,-20,7": " o.move(-10, -20, 7);",
                "move 10,20,7,3": " o.move(10, 20, 7, 3);",
                "move 10,20,,3": " o.move(10, 20, undefined, 3);",
                "move x,y,m,g1": ' o.move(v["x" + t.x], v["y" + t.y], v["m" + t.m], v["g1" + t.g]);',
                "mover 10,20": " o.mover(10, 20);",
                "mover -10,-20,7": " o.mover(-10, -20, 7);",
                "mover 10,20,7,3": " o.mover(10, 20, 7, 3);",
                "mover 10,20,,3": " o.mover(10, 20, undefined, 3);",
                "mover x,y,m,g1": ' o.mover(v["x" + t.x], v["y" + t.y], v["m" + t.m], v["g1" + t.g]);'
            },
            "new, next, not": {
                "new ": " o.new();",
                "for a=1 to 2: next ": ' /* for() */ o.vmAssertNumberType("a"); v["a" + t.a] = 1; o.goto("f0b"); break;\ncase "f0": v["a" + t.a] += 1;\ncase "f0b": if (v["a" + t.a] > 2) { o.goto("f0e"); break; } /* next("") */ o.goto("f0"); break;\ncase "f0e":',
                "for i=1 to 2: next i": ' /* for() */ o.vmAssertNumberType("i"); v["i" + t.i] = 1; o.goto("f0b"); break;\ncase "f0": v["i" + t.i] += 1;\ncase "f0b": if (v["i" + t.i] > 2) { o.goto("f0e"); break; } /* next("v["i" + t.i]") */ o.goto("f0"); break;\ncase "f0e":',
                "for j=1 to 2:for i=3 to 4: next i,j": ' /* for() */ o.vmAssertNumberType("j"); v["j" + t.j] = 1; o.goto("f0b"); break;\ncase "f0": v["j" + t.j] += 1;\ncase "f0b": if (v["j" + t.j] > 2) { o.goto("f0e"); break; } /* for() */ o.vmAssertNumberType("i"); v["i" + t.i] = 3; o.goto("f1b"); break;\ncase "f1": v["i" + t.i] += 1;\ncase "f1b": if (v["i" + t.i] > 4) { o.goto("f1e"); break; } /* next("v["i" + t.i]") */ o.goto("f1"); break;\ncase "f1e":; /* next("v["j" + t.j]") */ o.goto("f0"); break;\ncase "f0e":',
                "a=not 2": ' v["a" + t.a] = o.vmAssign("a", ~(2));',
                "a=not -b": ' v["a" + t.a] = o.vmAssign("a", ~(o.vmRound(-(v["b" + t.b]))));'
            },
            "on break ..., on error goto, on gosub, on goto, on sq gosub, openin, openout, or, origin, out": {
                "on break cont": " o.onBreakCont();",
                "10 on break gosub 10": " o.onBreakGosub(10);",
                "on break stop": " o.onBreakStop();",
                "10 on error goto 0": " o.onErrorGoto(0);",
                "10 on error goto 10": " o.onErrorGoto(10);",
                "10 on 1 gosub 10": ' o.onGosub("10g0", 1, 10); break;\ncase "10g0":',
                "10 on x gosub 10,20\n20 rem": ' o.onGosub("10g0", v["x" + t.x], 10, 20); break;\ncase "10g0":\n //',
                "10 on x+1 gosub 10,20,20\n20 rem": ' o.onGosub("10g0", v["x" + t.x] + 1, 10, 20, 20); break;\ncase "10g0":\n //',
                "10 on 1 goto 10": ' o.onGoto("10s0", 1, 10); break;\ncase "10s0":',
                "10 on x goto 10,20\n20 rem": ' o.onGoto("10s0", v["x" + t.x], 10, 20); break;\ncase "10s0":\n //',
                "10 on x+1 goto 10,20,20\n20 rem": ' o.onGoto("10s0", v["x" + t.x] + 1, 10, 20, 20); break;\ncase "10s0":\n //',
                "10 on sq(1) gosub 10": " o.onSqGosub(1, 10);",
                "10 on sq(channel) gosub 10": ' o.onSqGosub(v["channel" + t.c], 10);',
                'openin "file"': ' o.openin("file"); o.goto("s0"); break;\ncase "s0":',
                "openin f$": ' o.openin(v.f$); o.goto("s0"); break;\ncase "s0":',
                'openout "file"': ' o.openout("file");',
                "openout f$": " o.openout(v.f$);",
                "a=1 or &1a0": ' v["a" + t.a] = o.vmAssign("a", 1 | 0x1a0);',
                "a=b or c": ' v["a" + t.a] = o.vmAssign("a", o.vmRound(v["b" + t.b]) | o.vmRound(v["c" + t.c]));',
                "origin 10,20": " o.origin(10, 20);",
                "origin 10,20,5,200,50,15": " o.origin(10, 20, 5, 200, 50, 15);",
                "origin x,y,left,right,top,bottom": ' o.origin(v["x" + t.x], v["y" + t.y], v["left" + t.l], v["right" + t.r], v["top" + t.t], v["bottom" + t.b]);',
                "out &bc12,&12": " o.out(-0x43ee, 0x12);",
                "out adr,by": ' o.out(v["adr" + t.a], v["by" + t.b]);'
            },
            "paper, peek, pen, pi, plot, plotr, poke, pos, print": {
                "paper 2": " o.paper(0, 2);",
                "paper#stream,p": ' o.paper(v["stream" + t.s], v["p" + t.p]);',
                "a=peek(&c000)": ' v["a" + t.a] = o.vmAssign("a", o.peek(-0x4000));',
                "a=peek(adr+5)": ' v["a" + t.a] = o.vmAssign("a", o.peek(v["adr" + t.a] + 5));',
                "pen 2": " o.pen(0, 2);",
                "pen 2,1": " o.pen(0, 2, 1);",
                "pen#3,2,1": " o.pen(3, 2, 1);",
                "pen#stream,p,trans": ' o.pen(v["stream" + t.s], v["p" + t.p], v["trans" + t.t]);',
                "a=pi": ' v["a" + t.a] = o.vmAssign("a", o.pi());',
                "plot 10,20": " o.plot(10, 20);",
                "plot -10,-20,7": " o.plot(-10, -20, 7);",
                "plot 10,20,7,3": " o.plot(10, 20, 7, 3);",
                "plot 10,20,,3": " o.plot(10, 20, undefined, 3);",
                "plot x,y,m,g1": ' o.plot(v["x" + t.x], v["y" + t.y], v["m" + t.m], v["g1" + t.g]);',
                "plotr 10,20": " o.plotr(10, 20);",
                "plotr -10,-20,7": " o.plotr(-10, -20, 7);",
                "plotr 10,20,7,3": " o.plotr(10, 20, 7, 3);",
                "plotr 10,20,,3": " o.plotr(10, 20, undefined, 3);",
                "plotr x,y,m,g1": ' o.plotr(v["x" + t.x], v["y" + t.y], v["m" + t.m], v["g1" + t.g]);',
                "poke &c000,23": " o.poke(-0x4000, 23);",
                "poke adr,by": ' o.poke(v["adr" + t.a], v["by" + t.b]);',
                "a=pos(#0)": ' v["a" + t.a] = o.vmAssign("a", o.pos(0));',
                "a=pos(#stream)": ' v["a" + t.a] = o.vmAssign("a", o.pos(v["stream" + t.s]));',
                "print ": ' o.print(0, "\\r\\n");',
                'print "string"': ' o.print(0, "string", "\\r\\n");',
                "print a$": ' o.print(0, v.a$, "\\r\\n");',
                "print a$,b": ' o.print(0, v.a$, {type: "commaTab", args: []}, v["b" + t.b], "\\r\\n");',
                "print#2,a$,b": ' o.print(2, v.a$, {type: "commaTab", args: []}, v["b" + t.b], "\\r\\n");',
                'print using"####";ri;': ' o.print(0, o.using("####", v["ri" + t.r]));',
                'print using "##.##";-1.2': ' o.print(0, o.using("##.##", -1.2), "\\r\\n");',
                'print using"### ########";a,b': ' o.print(0, o.using("### ########", v["a" + t.a], v["b" + t.b]), "\\r\\n");',
                'print using "\\   \\";"n1";"n2";" xx3";': ' o.print(0, o.using("\\\\   \\\\", "n1", "n2", " xx3"));',
                'print using "!";"a1";"a2";': ' o.print(0, o.using("!", "a1", "a2"));',
                'print using "&";"a1";"a2";': ' o.print(0, o.using("&", "a1", "a2"));',
                'print#9,tab(t);t$;i;"h1"': ' o.print(9, {type: "tab", args: [v["t" + t.t]]}, v.t$, v["i" + t.i], "h1", "\\r\\n");',
                "?": ' o.print(0, "\\r\\n");',
                "?#2,ti-t0!;spc(5);": ' o.print(2, v["ti" + t.t] - v.t0R, {type: "spc", args: [5]});'
            },
            "rad, randomize, read, release, rem, remain, renum, restore, resume, return, right$, rnd, round, run": {
                "rad ": " o.rad();",
                "randomize ": ' o.goto("s0"); break;\ncase "s0":o.randomize(); o.goto("s1"); break;\ncase "s1": o.randomize(o.vmGetNextInput());',
                "randomize 123.456": " o.randomize(123.456);",
                "read a$": ' v.a$ = o.read("a$");',
                "read b": ' v["b" + t.b] = o.read("b");',
                "read a$,b,c$": ' v.a$ = o.read("a$"); v["b" + t.b] = o.read("b"); v.c$ = o.read("c$");',
                "release 1": " o.release(1);",
                "release n+1": ' o.release(v["n" + t.n] + 1);',
                "rem ": " //",
                "rem comment until EOL": " // comment until EOL",
                "rem \\": " // \\",
                "'": " //",
                "'comment until EOL": " // comment until EOL",
                "'\\": " // \\",
                "a=1 'comment": ' v["a" + t.a] = o.vmAssign("a", 1); // comment',
                "a=remain(0)": ' v["a" + t.a] = o.vmAssign("a", o.remain(0));',
                "a=remain(ti)": ' v["a" + t.a] = o.vmAssign("a", o.remain(v["ti" + t.t]));',
                "renum ": ' o.renum(); o.goto("s0"); break;\ncase "s0":',
                "renum 100": ' o.renum(100); o.goto("s0"); break;\ncase "s0":',
                "renum 100,50": ' o.renum(100, 50); o.goto("s0"); break;\ncase "s0":',
                "renum 100,50,2": ' o.renum(100, 50, 2); o.goto("s0"); break;\ncase "s0":',
                "restore ": " o.restore();",
                "10 restore 10": " o.restore(10);",
                "resume ": ' o.vmTrace(""); o.resume(); break;',
                "10 resume 10": " o.resume(10); break;",
                "resume next": ' o.vmTrace(""); o.resumeNext(); break;',
                "return ": " o.return(); break;",
                "a$=right$(b$,n)": ' v.a$ = o.right$(v.b$, v["n" + t.n]);',
                "a=rnd": ' v["a" + t.a] = o.vmAssign("a", o.rnd());',
                "a=rnd(0)": ' v["a" + t.a] = o.vmAssign("a", o.rnd(0));',
                "a=rnd(-1*b)": ' v["a" + t.a] = o.vmAssign("a", o.rnd(-1 * v["b" + t.b]));',
                "a=round(2.335)": ' v["a" + t.a] = o.vmAssign("a", o.round(2.335));',
                "a=round(2.335,2)": ' v["a" + t.a] = o.vmAssign("a", o.round(2.335, 2));',
                "run ": ' o.run(); o.goto("s0"); break;\ncase "s0":',
                "10 run 10": ' o.run(10); o.goto("10s0"); break;\ncase "10s0":',
                'run "file"': ' o.run("file"); o.goto("s0"); break;\ncase "s0":',
                "run f$": ' o.run(v.f$); o.goto("s0"); break;\ncase "s0":'
            },
            save: {
                'save "file"': ' o.save("file"); o.goto("s0"); break;\ncase "s0":',
                'save "file",p': ' o.save("file", "p"); o.goto("s0"); break;\ncase "s0":',
                'save "file",a': ' o.save("file", "a"); o.goto("s0"); break;\ncase "s0":',
                'save "file.scr",b,&c000,&4000': ' o.save("file.scr", "b", -0x4000, 0x4000); o.goto("s0"); break;\ncase "s0":',
                'save "file.bin",b,&8000,&100,&8010': ' o.save("file.bin", "b", -0x8000, 0x100, -0x7ff0); o.goto("s0"); break;\ncase "s0":',
                "save f$,b,adr,lg,entry": ' o.save(v.f$, "b", v["adr" + t.a], v["lg" + t.l], v["entry" + t.e]); o.goto("s0"); break;\ncase "s0":',
                "a=sgn(5)": ' v["a" + t.a] = o.vmAssign("a", o.sgn(5));',
                "a=sgn(0)": ' v["a" + t.a] = o.vmAssign("a", o.sgn(0));',
                "a=sgn(-5)": ' v["a" + t.a] = o.vmAssign("a", o.sgn(-5));',
                "a=sin(2.3)": ' v["a" + t.a] = o.vmAssign("a", o.sin(2.3));',
                "sound 1,100": ' o.sound(1, 100); o.goto("s0"); break;\ncase "s0":',
                "sound 1,100,400": ' o.sound(1, 100, 400); o.goto("s0"); break;\ncase "s0":',
                "sound 1,100,400,15": ' o.sound(1, 100, 400, 15); o.goto("s0"); break;\ncase "s0":',
                "sound 1,100,400,15,1": ' o.sound(1, 100, 400, 15, 1); o.goto("s0"); break;\ncase "s0":',
                "sound 1,100,400,15,1,1": ' o.sound(1, 100, 400, 15, 1, 1); o.goto("s0"); break;\ncase "s0":',
                "sound 1,100,400,15,1,1,4": ' o.sound(1, 100, 400, 15, 1, 1, 4); o.goto("s0"); break;\ncase "s0":',
                "sound ch,period,duration,,,,noise": ' o.sound(v["ch" + t.c], v["period" + t.p], v["duration" + t.d], undefined, undefined, undefined, v["noise" + t.n]); o.goto("s0"); break;\ncase "s0":',
                "sound ch,period,duration,vol,env1,ent1,noise": ' o.sound(v["ch" + t.c], v["period" + t.p], v["duration" + t.d], v["vol" + t.v], v["env1" + t.e], v["ent1" + t.e], v["noise" + t.n]); o.goto("s0"); break;\ncase "s0":',
                "a$=space$(9)": " v.a$ = o.space$(9);",
                "a$=space$(9+b)": ' v.a$ = o.space$(9 + v["b" + t.b]);',
                "speed ink 10,5": " o.speedInk(10, 5);",
                "speed ink a,b": ' o.speedInk(v["a" + t.a], v["b" + t.b]);',
                "speed key 10,5": " o.speedKey(10, 5);",
                "speed key a,b": ' o.speedKey(v["a" + t.a], v["b" + t.b]);',
                "speed write 1": " o.speedWrite(1);",
                "speed write a-1": ' o.speedWrite(v["a" + t.a] - 1);',
                "1 speed mode 2": "BasicParser: Expected INK, KEY or WRITE in 1 at pos 8-12: mode",
                "a=sq(1)": ' v["a" + t.a] = o.vmAssign("a", o.sq(1));',
                "a=sq(channel)": ' v["a" + t.a] = o.vmAssign("a", o.sq(v["channel" + t.c]));',
                "a=sqr(9)": ' v["a" + t.a] = o.vmAssign("a", o.sqr(9));',
                "stop ": ' o.stop("s0"); break;\ncase "s0":',
                "a$=str$(123)": " v.a$ = o.str$(123);",
                "a$=str$(a+b)": ' v.a$ = o.str$(v["a" + t.a] + v["b" + t.b]);',
                'a$=string$(40,"*")': ' v.a$ = o.string$(40, "*");',
                "a$=string$(40,42)": " v.a$ = o.string$(40, 42);",
                "a$=string$(lg,char)": ' v.a$ = o.string$(v["lg" + t.l], v["char" + t.c]);',
                "symbol 255,1,2,3,4,5,6,7,&x10110011": " o.symbol(255, 1, 2, 3, 4, 5, 6, 7, 0b10110011);",
                "symbol 255,1": " o.symbol(255, 1);",
                "symbol after 255": " o.symbolAfter(255);"
            },
            "tag, tagoff, tan, test, testr, time, troff, tron": {
                "tag ": " o.tag(0);",
                "tag#2": " o.tag(2);",
                "tag#stream": ' o.tag(v["stream" + t.s]);',
                "tagoff ": " o.tagoff(0);",
                "tagoff#2": " o.tagoff(2);",
                "tagoff#stream": ' o.tagoff(v["stream" + t.s]);',
                "a=tan(45)": ' v["a" + t.a] = o.vmAssign("a", o.tan(45));',
                "a=test(10,20)": ' v["a" + t.a] = o.vmAssign("a", o.test(10, 20));',
                "a=test(x,y)": ' v["a" + t.a] = o.vmAssign("a", o.test(v["x" + t.x], v["y" + t.y]));',
                "a=testr(10,-20)": ' v["a" + t.a] = o.vmAssign("a", o.testr(10, -20));',
                "a=testr(xm,ym)": ' v["a" + t.a] = o.vmAssign("a", o.testr(v["xm" + t.x], v["ym" + t.y]));',
                "t!=time": " v.tR = o.time();",
                "troff ": " o.troff();",
                "tron ": ' o.vmTrace(""); o.tron(); o.goto("s0"); break;\ncase "s0":'
            },
            "unt, upper$": {
                "a=unt(&ff66)": ' v["a" + t.a] = o.vmAssign("a", o.unt(-0x9a));',
                'a$=upper$("String")': ' v.a$ = o.upper$("String");',
                "a$=upper$(b$)": " v.a$ = o.upper$(v.b$);"
            },
            "val, vpos": {
                'a=val("-2.3")': ' v["a" + t.a] = o.vmAssign("a", o.val("-2.3"));',
                "a=val(b$)": ' v["a" + t.a] = o.vmAssign("a", o.val(v.b$));',
                "a=vpos(#0)": ' v["a" + t.a] = o.vmAssign("a", o.vpos(0));',
                "a=vpos(#stream)": ' v["a" + t.a] = o.vmAssign("a", o.vpos(v["stream" + t.s]));'
            },
            "wait, wend, while, width, window, window swap, write": {
                "wait &ff34,20": " o.wait(-0xcc, 20);",
                "wait &ff34,20,25": " o.wait(-0xcc, 20, 25);",
                "while a=10: wend ": ' \ncase "w0": if (!(v["a" + t.a] === 10 ? -1 : 0)) { o.goto("w0e"); break; } /* o.wend() */ o.goto("w0"); break;\ncase "w0e":',
                "while a>0": ' \ncase "w0": if (!(v["a" + t.a] > 0 ? -1 : 0)) { o.goto("w0e"); break; }',
                "width 40": " o.width(40);",
                "window 10,30,5,20": " o.window(0, 10, 30, 5, 20);",
                "window#1,10,30,5,20": " o.window(1, 10, 30, 5, 20);",
                "window#stream,left,right,top,bottom": ' o.window(v["stream" + t.s], v["left" + t.l], v["right" + t.r], v["top" + t.t], v["bottom" + t.b]);',
                "window swap 1": " o.windowSwap(1);",
                "window swap 1,0": " o.windowSwap(1, 0);",
                "1 window swap #1": "BasicParser: Expected number in 1 at pos 14-15: #",
                "write a$": " o.write(0, v.a$);",
                "write a$,b": ' o.write(0, v.a$, v["b" + t.b]);',
                "write#9,a$,b": ' o.write(9, v.a$, v["b" + t.b]);'
            },
            "xor, xpos": {
                "a=&x1001 xor &x0110": ' v["a" + t.a] = o.vmAssign("a", 0b1001 ^ 0b0110);',
                "a=b xor c": ' v["a" + t.a] = o.vmAssign("a", o.vmRound(v["b" + t.b]) ^ o.vmRound(v["c" + t.c]));',
                "a=xpos": ' v["a" + t.a] = o.vmAssign("a", o.xpos());'
            },
            ypos: {
                "a=ypos": ' v["a" + t.a] = o.vmAssign("a", o.ypos());'
            },
            zone: {
                "zone 13+n": ' o.zone(13 + v["n" + t.n]);'
            },
            rsx: {
                "|a": ' o.rsx.a(); o.goto("s0"); break;\ncase "s0":',
                "|b": ' o.rsx.b(); o.goto("s0"); break;\ncase "s0":',
                "|basic": ' o.rsx.basic(); o.goto("s0"); break;\ncase "s0":',
                "|cpm": ' o.rsx.cpm(); o.goto("s0"); break;\ncase "s0":',
                'a$="*.drw":|dir,@a$': ' v.a$ = "*.drw"; o.rsx.dir(o.addressOf("a$")); o.goto("s0"); break;\ncase "s0":',
                "|disc": ' o.rsx.disc(); o.goto("s0"); break;\ncase "s0":',
                "|disc.in": ' o.rsx.disc_in(); o.goto("s0"); break;\ncase "s0":',
                "|disc.out": ' o.rsx.disc_out(); o.goto("s0"); break;\ncase "s0":',
                "|drive,0": ' o.rsx.drive(0); o.goto("s0"); break;\ncase "s0":',
                "1 |drive,": "BasicParser: Expected any parameter for , in 1 at pos 9: ",
                "1 |drive,#1": "BasicParser: Unexpected stream in 1 at pos 9-10: #",
                '|era,"file.bas"': ' o.rsx.era("file.bas"); o.goto("s0"); break;\ncase "s0":',
                '|ren,"file1.bas","file2.bas"': ' o.rsx.ren("file1.bas", "file2.bas"); o.goto("s0"); break;\ncase "s0":',
                "|tape": ' o.rsx.tape(); o.goto("s0"); break;\ncase "s0":',
                "|tape.in": ' o.rsx.tape_in(); o.goto("s0"); break;\ncase "s0":',
                "|tape.out": ' o.rsx.tape_out(); o.goto("s0"); break;\ncase "s0":',
                "|user,1": ' o.rsx.user(1); o.goto("s0"); break;\ncase "s0":',
                "|mode,3": ' o.rsx.mode(3); o.goto("s0"); break;\ncase "s0":',
                "|renum,1,2,3,4": ' o.rsx.renum(1, 2, 3, 4); o.goto("s0"); break;\ncase "s0":'
            },
            keepSpaces: {
                ' 1  chain   merge  "f5"': ' o.chainMerge("f5"); o.goto("1s0"); break;\ncase "1s0":',
                ' 1  def   fn  a$ = "abc"': ' v.fna$ = function () { return "abc"; };',
                " 1  for   i   =   1   to  10   step  2": ' /* for() */ o.vmAssertNumberType("i"); v["i" + t.i] = 1; o.goto("1f0b"); break;\ncase "1f0": v["i" + t.i] += 2;\ncase "1f0b": if (v["i" + t.i] > 10) { o.goto("1f0e"); break; }',
                " 1  if    a  =  1     then  1     else    goto  1": ' if (v["a" + t.a] === 1) { o.goto(1); break; } else { o.goto(1); break; }',
                " 1  line   input  a$": ' o.goto("1s0"); break;\ncase "1s0":o.lineInput(0, undefined, "? ", "a$"); o.goto("1s1"); break;\ncase "1s1":; v.a$ = o.vmGetNextInput();',
                " 1  on  break   cont": " o.onBreakCont();",
                " 1  on  break   gosub   1 ": " o.onBreakGosub(1);",
                " 1  on  break   stop": " o.onBreakStop();",
                " 1  on  error   goto   1 ": " o.onErrorGoto(1);",
                " 1  on  x  gosub   1  ,  2\n2  rem": ' o.onGosub("1g0", v["x" + t.x], 1, 2); break;\ncase "1g0":\n //',
                " 1  on  x  goto   1  ,  2\n2  rem": ' o.onGoto("1s0", v["x" + t.x], 1, 2); break;\ncase "1s0":\n //',
                ' 1   print   using    "####" ;  ri  ;': ' o.print(0, o.using("####", v["ri" + t.r]));',
                " 1  window   swap  1,0": " o.windowSwap(1, 0);",
                "a=1 else a=2": ' v["a" + t.a] = o.vmAssign("a", 1); // else a = 2',
                "a=1 'comment": ' v["a" + t.a] = o.vmAssign("a", 1); // comment',
                "a=1 :'comment": ' v["a" + t.a] = o.vmAssign("a", 1); // comment',
                "::a=3-2-1: :": ' v["a" + t.a] = o.vmAssign("a", (3 - 2) - 1);',
                " a =  ( b% >= c%  ) *     ( d <=e )  ": ' v["a" + t.a] = o.vmAssign("a", (v.bI >= v.cI ? -1 : 0) * (v["d" + t.d] <= v["e" + t.e] ? -1 : 0));',
                "a = (((3+2))*((3-7)))": ' v["a" + t.a] = o.vmAssign("a", (3 + 2) * (3 - 7));'
            }
        };
        function fnReplacer(bin) {
            return "0x" + parseInt(bin.substr(2), 2).toString(16).toLowerCase();
        }
        function runTestsFor(assert, _sCategory, tests, results) {
            var allowDirect = true, options = {
                quiet: true
            }, codeGeneratorJs = new CodeGeneratorJs_1.CodeGeneratorJs({
                quiet: true,
                lexer: new BasicLexer_1.BasicLexer(options),
                parser: new BasicParser_1.BasicParser(options),
                trace: false,
                rsx: {
                    rsxIsAvailable: function (rsx) {
                        return (/^a|b|basic|cpm|dir|disc|disc\.in|disc\.out|drive|era|ren|tape|tape\.in|tape\.out|user|mode|renum$/).test(rsx);
                    }
                },
                noCodeFrame: true
            });
            for (var key in tests) {
                if (tests.hasOwnProperty(key)) {
                    var variables = new Variables_1.Variables(), output = codeGeneratorJs.generate(key, variables, allowDirect), result = output.error ? String(output.error) : output.text;
                    var expected = tests[key];
                    if (!Utils_1.Utils.supportsBinaryLiterals) {
                        expected = expected.replace(/(0b[01]+)/g, fnReplacer); // for old IE
                    }
                    if (results) {
                        results.push(TestHelper_1.TestHelper.stringInQuotes(key) + ": " + TestHelper_1.TestHelper.stringInQuotes(result));
                    }
                    if (assert) {
                        assert.strictEqual(result, expected, key);
                    }
                }
            }
        }
        TestHelper_1.TestHelper.generateAndRunAllTests(allTests, runTestsFor);
    });
});
// end
//# sourceMappingURL=CodeGeneratorJs.qunit.js.map