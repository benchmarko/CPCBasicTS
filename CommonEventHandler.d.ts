import { IController } from "./Interfaces";
import { Model } from "./Model";
import { View } from "./View";
export declare class CommonEventHandler implements EventListenerObject {
    model: Model;
    view: View;
    controller: IController;
    fnUserAction: (event: Event, sId: string) => void;
    constructor(oModel: Model, oView: View, oController: IController);
    init(oModel: Model, oView: View, oController: IController): void;
    private toogleHidden;
    fnActivateUserAction(fnAction: (event: Event, sId: string) => void): void;
    fnDeactivateUserAction(): void;
    private onSpecialButtonClick;
    private onInputButtonClick;
    private onInp2ButtonClick;
    private onOutputButtonClick;
    private onResultButtonClick;
    private onTextButtonClick;
    private onVariableButtonClick;
    private onCpcButtonClick;
    private onKbdButtonClick;
    private onKbdLayoutButtonClick;
    private onConsoleButtonClick;
    private onParseButtonClick;
    private onRenumButtonClick;
    private onPrettyButtonClick;
    private fnUpdateAreaText;
    private onUndoButtonClick;
    private onRedoButtonClick;
    private onRunButtonClick;
    private onStopButtonClick;
    private onContinueButtonClick;
    private onResetButtonClick;
    private onParseRunButtonClick;
    private static onHelpButtonClick;
    private static onNothing;
    private onOutputTextChange;
    private static encodeUriParam;
    private onReloadButtonClick;
    onDatabaseSelectChange(): void;
    onExampleSelectChange(): void;
    onVarSelectChange(): void;
    onKbdLayoutSelectChange(): void;
    private onVarTextChange;
    private onScreenshotButtonClick;
    private onEnterButtonClick;
    private onSoundButtonClick;
    onCpcCanvasClick(event: Event): void;
    onWindowClick(event: Event): void;
    mHandlers: {
        onSpecialButtonClick: () => void;
        onInputButtonClick: () => void;
        onInp2ButtonClick: () => void;
        onOutputButtonClick: () => void;
        onResultButtonClick: () => void;
        onTextButtonClick: () => void;
        onVariableButtonClick: () => void;
        onCpcButtonClick: () => void;
        onKbdButtonClick: () => void;
        onKbdLayoutButtonClick: () => void;
        onConsoleButtonClick: () => void;
        onParseButtonClick: () => void;
        onRenumButtonClick: () => void;
        onPrettyButtonClick: () => void;
        onUndoButtonClick: () => void;
        onRedoButtonClick: () => void;
        onRunButtonClick: () => void;
        onStopButtonClick: () => void;
        onContinueButtonClick: (event: Event) => void;
        onResetButtonClick: () => void;
        onParseRunButtonClick: (event: Event) => void;
        onHelpButtonClick: typeof CommonEventHandler.onHelpButtonClick;
        onInputTextClick: typeof CommonEventHandler.onNothing;
        onOutputTextClick: typeof CommonEventHandler.onNothing;
        onResultTextClick: typeof CommonEventHandler.onNothing;
        onVarTextClick: typeof CommonEventHandler.onNothing;
        onOutputTextChange: () => void;
        onReloadButtonClick: () => void;
        onDatabaseSelectChange: () => void;
        onExampleSelectChange: () => void;
        onVarSelectChange: () => void;
        onKbdLayoutSelectChange: () => void;
        onVarTextChange: () => void;
        onScreenshotButtonClick: () => void;
        onEnterButtonClick: () => void;
        onSoundButtonClick: () => void;
        onCpcCanvasClick: (event: Event) => void;
        onWindowClick: (event: Event) => void;
    };
    handleEvent(event: Event): void;
}
