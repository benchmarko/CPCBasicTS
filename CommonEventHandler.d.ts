import { IController } from "./Interfaces";
import { Model } from "./Model";
import { View } from "./View";
export declare class CommonEventHandler implements EventListenerObject {
    model: Model;
    view: View;
    controller: IController;
    fnUserAction: ((event: Event, sId: string) => void) | undefined;
    constructor(oModel: Model, oView: View, oController: IController);
    private toogleHidden;
    fnSetUserAction(fnAction: ((event: Event, sId: string) => void) | undefined): void;
    private onSpecialButtonClick;
    private onInputButtonClick;
    private onInp2ButtonClick;
    private onOutputButtonClick;
    private onResultButtonClick;
    private onTextButtonClick;
    private onVariableButtonClick;
    private onCpcButtonClick;
    private onKbdButtonClick;
    private onKbdLayoutButtonClick;
    private onConsoleButtonClick;
    private onParseButtonClick;
    private onRenumButtonClick;
    private onPrettyButtonClick;
    private fnUpdateAreaText;
    private onUndoButtonClick;
    private onRedoButtonClick;
    private onRunButtonClick;
    private onStopButtonClick;
    private onContinueButtonClick;
    private onResetButtonClick;
    private onParseRunButtonClick;
    private static onHelpButtonClick;
    private static onNothing;
    private onOutputTextChange;
    private static encodeUriParam;
    private onReloadButtonClick;
    onDatabaseSelectChange(): void;
    onExampleSelectChange(): void;
    onVarSelectChange(): void;
    onKbdLayoutSelectChange(): void;
    private onVarTextChange;
    private onScreenshotButtonClick;
    private onEnterButtonClick;
    private onSoundButtonClick;
    onCpcCanvasClick(event: Event): void;
    onWindowClick(event: Event): void;
    private mHandlers;
    handleEvent(event: Event): void;
}
